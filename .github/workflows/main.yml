name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  verilator:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/cache@v2
        id: cache-verilator
        with:
          path: /opt/verilator
          key: ubuntu-22_04-verilator-4_210

      - name: Install Verilator
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install git perl python3 g++ flex bison ccache libfl2 libfl-dev zlib1g zlib1g-dev
          git clone https://github.com/verilator/verilator
          unset VERILATOR_ROOT
          cd verilator
          git checkout tags/v4.210
          autoconf
          ./configure --prefix /opt/verilator
          make
          sudo make install
          df -h
          cd ..
          rm -rf verilator


  lint:
    needs: verilator
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false

      - uses: actions/cache@v2
        id: cache-verilator
        with:
          path: /opt/verilator
          key: ubuntu-22_04-verilator-4_210

      - name: Abort if no cache
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        run: exit 1

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install git perl python3 g++ ccache libfl2 libfl-dev zlib1g zlib1g-dev

      - name: Install verible and lint
        run: |
          curl -sSL https://api.github.com/repos/chipsalliance/verible/releases/latest | grep browser_download_url | grep Ubuntu-20.04 | cut -d '"' -f 4 | wget -qi -
          mkdir verible
          tar -xf verible*.tar.gz -C verible --strip-components=1
          export PATH=$PATH:$PWD/verible/bin:/opt/verilator/bin
          cd test && make lint


  unit:
    needs: verilator
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        unit: [lsu, alu, mul, sld, elem, csr, misc]
        main_core: [ibex, cv32e40x]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: actions/cache@v2
        id: cache-verilator
        with:
          path: /opt/verilator
          key: ubuntu-22_04-verilator-4_210

      - name: Abort if no cache
        if: steps.cache-verilator.outputs.cache-hit != 'true'
        run: exit 1

      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install git perl python3 g++ ccache libfl2 libfl-dev zlib1g zlib1g-dev
          sudo apt-get install srecord llvm-14 clang-14
          sudo ln -sf /usr/bin/llvm-objdump-14 /usr/bin/llvm-objdump
          sudo ln -sf /usr/bin/llvm-objcopy-14 /usr/bin/llvm-objcopy

      - name: Run tests
        shell: bash {0} # disable fail-fast behavior
        run: |
          export PATH=$PATH:/opt/verilator/bin:/opt/riscv-gcc/bin
          verilator --version
          retval=0
          while IFS= read -ra line; do
            if [ -z "$line" ] || [ "${line:0:1}" = "#" ]; then
              continue
            fi
            echo "$line" > test/${{ matrix.unit }}/test_configs.conf
            vcd=`echo "${{ matrix.unit }}_${{ matrix.main_core }}_${line}.vcd" | sed 's/  */_/g'`
            make -C test ${{ matrix.unit }} CORE=${{ matrix.main_core }} FULL_LOG=1 TRACE_VCD=$vcd
            if [ $? -ne 0 ]; then
              retval=1
            fi
          done < .github/test_configs.conf
          exit $retval

      - name: Archive VCD trace files
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: vcd-trace-files
          path: |
            test/${{ matrix.unit }}/*.vcd
